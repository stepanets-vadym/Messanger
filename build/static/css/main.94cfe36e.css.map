{"version":3,"file":"static/css/main.94cfe36e.css","mappings":"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","sources":["styles/global/global.module.scss","styles/_mixins.scss","Pages/Login/Login.module.scss","styles/_variables.scss","Elements/SideContact/SideContact.module.scss","styles/_media.scss","Elements/SideContacts/SideContacts.module.scss","Elements/SideHead/SideHead.module.scss","Components/Sidebar/Sidebar.module.scss","Elements/ChatContent/ChatContent.module.scss","Elements/ChatFooter/ChatFooter.module.scss","Elements/ChatHead/ChatHead.module.scss","Components/Chat/Chat.module.scss","Pages/Messanger.module.scss","styles/_fonts.scss","styles/_null.scss","styles/_main.scss","Elements/Loader/Loader.module.scss"],"sourcesContent":["@import '../mixins';\r\n@import '../variables';\r\n@import '../media';\r\n.container {\r\n  @include maxCentered(1580);\r\n  padding-left: 10px;\r\n  padding-right: 10px;\r\n}\r\n","// ! EXAMPLE TO INCLUDE\r\n// @include backgroundContainCenter;\r\n// font-size: em(18);\r\n// @include size(30);\r\n\r\n@mixin backgroundContainCenter {\r\n  background-size: contain;\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n}\r\n\r\n@mixin backgroundCoverCenter {\r\n  background-size: cover;\r\n  background-position: center center;\r\n}\r\n\r\n@function em($px) {\r\n  @return $px / $fs-base + em;\r\n}\r\n\r\n@mixin size($px) {\r\n  width: $px + px;\r\n  height: $px + px;\r\n}\r\n\r\n@mixin flexCenter {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n}\r\n\r\n@mixin maxCentered($widthPx) {\r\n  max-width: $widthPx + px;\r\n  margin: 0 auto;\r\n}\r\n\r\n@mixin fixedGlobal {\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  display: flex;\r\n  z-index: 999;\r\n  bottom: 0;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n\r\n@mixin absolutely {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n}\r\n\r\n@mixin absolutelyCenter {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n}\r\n\r\n@mixin absolutelyCenterHT($top) {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: $top;\r\n  margin: 0 auto;\r\n}\r\n\r\n@mixin absolutelyCenterHB {\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  margin: 0 auto;\r\n}\r\n\r\n@mixin absolutelyFull {\r\n  position: absolute;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n\r\n@mixin limitText($lines, $lineHeight) {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: $lines;\r\n  line-height: $lineHeight;\r\n  max-height: $lineHeight * $lines + \"px\";\r\n}\r\n\r\n@mixin gradientText($gradient, $color) {\r\n  background: $gradient;\r\n  -ms-background: none;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  color: $color;\r\n  -ms-background-size: 10px;\r\n}\r\n\r\n\r\n// ! FONTS\r\n@mixin font-face($fontname, $fontfile, $fontweight: normal, $fontstyle: normal) {\r\n\t@font-face {\r\n\t\tfont-family: $fontname;\r\n\t\tsrc: url('./assets/fonts/' + $fontfile + '.eot');\r\n\t\tsrc: url('./assets/fonts/' + $fontfile + '.woff') format('woff'),\r\n\t\t\t\turl('./assets/fonts/' + $fontfile + '.ttf') format('truetype');\r\n\t\tfont-weight: $fontweight;\r\n\t\tfont-style: $fontstyle;\r\n\t}\r\n};","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.modal {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  z-index: 900;\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 0 5px;\r\n  position: fixed;\r\n  align-items: center;\r\n  transition: $t-normal;\r\n  justify-content: center;\r\n  background-color: $c-Cultured;\r\n}\r\n\r\n.content {\r\n  background-color: $c-CharlestonGreen;\r\n  justify-content: space-around;\r\n  border: 2px solid $c-black;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  text-align: center;\r\n  position: relative;\r\n  color: $c-white;\r\n  margin: 0 auto;\r\n  height: 300px;\r\n  padding: 20px;\r\n  display: flex;\r\n  width: 400px;\r\n}\r\n\r\n.btn {\r\n  border: 1px solid $c-white;\r\n  background: transparent;\r\n  transition: $t-normal;\r\n  border-radius: 15px;\r\n  font-size: 30px;\r\n  color: $c-white;\r\n  padding: 20px;\r\n  &:hover {\r\n    transform: scale(1.1, 1.1);\r\n  }\r\n}\r\n","// COLORS\r\n$c-black: #000000;\r\n$c-white: #fff;\r\n\r\n// Light\r\n$c-Deep-Carrot-Orange-darck: #dd6831;\r\n$c-Cultured: #f6f6f6;\r\n\r\n// Dark\r\n$c-CharlestonGreen: #292929;\r\n$c-HarvestGold: #e29500;\r\n$c-Cyan: #00c1ec;\r\n\r\n// Font\r\n$f-OpenSans: 'Open Sans', sans-serif;\r\n\r\n// Font size\r\n$fs-base: 16;\r\n$fs-h1: 72;\r\n$fs-h2: 48;\r\n$fs-24: 24;\r\n$fs-text: 18;\r\n\r\n// Letter spacing\r\n$ls-base: 2;\r\n\r\n// Transition\r\n$t-normal: 0.35s cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n// Box Shadow\r\n$bs-normal: 3px 4px 7px rgba($c-black, 0.1);\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.SideContact {\r\n  border: 1px solid transparent;\r\n  transition: $t-normal;\r\n  align-items: center;\r\n  border-radius: 15px;\r\n  cursor: pointer;\r\n  display: flex;\r\n  padding: 10px;\r\n  &:hover {\r\n    background-color: $c-Cultured;\r\n    border: 1px solid $c-black;\r\n  }\r\n}\r\n\r\n.personImg {\r\n  @include flexCenter;\r\n  margin-right: 20px;\r\n  max-width: 80px;\r\n  @include media('<=phone') {\r\n    margin-right: 5px;\r\n    max-width: 40px;\r\n  }\r\n}\r\n\r\n.photo {\r\n  border-radius: 50%;\r\n}\r\n\r\n.ContactInfo {\r\n  justify-content: space-between;\r\n  display: flex;\r\n  width: 100%;\r\n}\r\n\r\n.info {\r\n  flex-direction: column;\r\n  display: flex;\r\n}\r\n\r\n.name {\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.lastMessage {\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  max-width: 234px;\r\n  @include media('<=phone') {\r\n    max-width: 170px;\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n.date {\r\n  max-width: 86px;\r\n  text-overflow: ellipsis;\r\n  height: 20px;\r\n  overflow: hidden;\r\n  @include media('<=phone') {\r\n    max-width: 60px;\r\n    font-size: 12px;\r\n  }\r\n}\r\n","\r\n//       _            _           _                           _ _       \r\n//      (_)          | |         | |                         | (_)      \r\n//       _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _ \r\n//      | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//      | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//      |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//          Simple, elegant and maintainable media queries in Sass\r\n//\r\n//                      http://include-media.com\r\n//      \r\n//           Author: Eduardo Boucas <mail@eduardoboucas.com>\r\n//\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'small': 320px,\r\n  'phone': 480px,\r\n  'tablet': 768px, \r\n  'desktop': 1024px,\r\n  'screen': 1400px,\r\n  'large': 1920px\r\n) !default;\r\n\r\n// xs: 0,\r\n//   sm: 576px,\r\n//   md: 768px,\r\n//   lg: 992px,\r\n//   xl: 1200px,\r\n//   xxl: 1400px\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///     'retina2x': (\r\n///         '(-webkit-min-device-pixel-ratio: 2)', \r\n///         '(min-resolution: 192dpi)'\r\n///     )\r\n/// );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen', \r\n  'print': 'print', \r\n  'handheld': 'handheld',\r\n  'retina2x': (\r\n      '(-webkit-min-device-pixel-ratio: 2)', \r\n      '(min-resolution: 192dpi)'\r\n  ), \r\n  'retina3x': (\r\n      '(-webkit-min-device-pixel-ratio: 3)', \r\n      '(min-resolution: 350dpi)'\r\n  )\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media(\">128px\") {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media(\">20em\") {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media(\">2.0rem\") {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1, \r\n  'em': 0.01, \r\n  'rem': 0.1\r\n) !default;\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media(\">phone\") { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media(\">phone\", \"<=tablet\") { } \r\n///\r\n/// @example scss - With custom values\r\n///  @include media(\">=358px\", \"<850px\") { } \r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media(\">desktop\", \"<=1350px\") { } \r\n///\r\n/// @example scss - With a static expression\r\n///  @include media(\"retina2x\") { } \r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { } \r\n///\r\n@mixin media($conditions...) {\r\n@for $i from 1 through length($conditions) {\r\n  $conditions: set-nth($conditions, $i, parse-expression(nth($conditions, $i)));\r\n}\r\n\r\n$branches: get-query-branches($conditions);\r\n$query: '';\r\n\r\n@each $branch in $branches {\r\n  @if (str-length($query) != 0) {\r\n    $query: $query + ', ';\r\n  }\r\n\r\n  $query: $query + $branch;\r\n}\r\n\r\n@media #{$query} {\r\n  @content;\r\n}\r\n}\r\n\r\n///\r\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {List}   $expressions  - list of expressions\r\n///\r\n/// @throws `$expression` is not a valid expression\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function get-query-branches($expressions) {\r\n$result: '';\r\n$has-groups: false;\r\n\r\n// Getting initial snapshot and looking for groups\r\n@each $expression in $expressions {\r\n  @if (str-length($result) != 0) {\r\n    $result: $result + ' and ';\r\n  }\r\n\r\n  @if (type-of($expression) == 'string') {\r\n    $result: $result + $expression;\r\n  } @else if (type-of($expression) == 'list') {\r\n    $result: $result + nth($expression, 1);\r\n    $has-groups: true;\r\n  } @else {\r\n    @warn '#{$expression} is not a valid expression.';\r\n  }\r\n}\r\n\r\n// If we have groups, we have to create all possible combinations\r\n@if $has-groups {\r\n  @each $expression in $expressions {\r\n    @if (type-of($expression) == 'list') {\r\n      $first: nth($expression, 1);\r\n\r\n      @each $member in $expression {\r\n        @if ($member != $first) {\r\n          @each $partial in $result {\r\n            $result: join($result, str-replace-first($first, $member, $partial));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n@return $result;\r\n}\r\n\r\n///\r\n/// Parses a string to form a media query expression\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $expression  - expression (in string)\r\n///\r\n/// @throws Expression with type `type-of($expression)` detected, string expected\r\n/// @throws `$expression` is missing an operator\r\n/// @throws Unknown unit: `$unit`\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function parse-expression($expression) {\r\n$operator: '';\r\n$value: '';\r\n$element: '';\r\n$result: '';\r\n$is-width: true;\r\n\r\n@if (type-of($expression) != 'string') {\r\n  @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\r\n}\r\n\r\n// Separating the operator from the rest of the expression\r\n@if (str-slice($expression, 2, 2) == '=') {\r\n  $operator: str-slice($expression, 1, 2);\r\n  $value: str-slice($expression, 3);\r\n} @else {\r\n  $operator: str-slice($expression, 1, 1);\r\n  $value: str-slice($expression, 2);\r\n}\r\n\r\n// Checking what type of expression we're dealing with\r\n@if map-has-key($breakpoints, $value) {\r\n  $result: map-get($breakpoints, $value);\r\n} @else if map-has-key($media-expressions, $expression) {\r\n  $result: map-get($media-expressions, $expression);\r\n  $is-width: false;\r\n} @else {\r\n  $result: to-number($value);\r\n}\r\n\r\n@if ($is-width) {\r\n  $unit: unit($result);\r\n  $interval: 0;\r\n  \r\n  @if (map-has-key($unit-intervals, $unit)) {\r\n    $interval: map-get($unit-intervals, $unit);\r\n  } @else {\r\n    @warn 'Unknown unit: #{$unit}';\r\n  } \r\n     \r\n  @if ($operator == '>') {\r\n    $element: '(min-width: #{$result + $interval})';\r\n  } @else if ($operator == '<') {\r\n    $element: '(max-width: #{$result - $interval})';\r\n  } @else if ($operator == '>=') {\r\n    $element: '(min-width: #{$result})';\r\n  } @else if ($operator == '<=') {\r\n    $element: '(max-width: #{$result})';\r\n  } @else {\r\n    @warn '#{$expression} is missing an operator.';\r\n  }\r\n} @else {\r\n  $element: $result;\r\n}\r\n\r\n@return $element;\r\n}\r\n\r\n///\r\n/// Replaces the first occurence of the string with the replacement string\r\n///\r\n/// @author Eduardo Boucas\r\n///\r\n/// @param {String}   $search  - The value being searched for\r\n/// @param {String}   $replace  - The replacement string\r\n/// @param {String}   $subject  - The string being replaced on\r\n///\r\n/// @return {String | Null}\r\n///\r\n@function str-replace-first($search, $replace, $subject) {\r\n$search-start: str-index($subject, $search);\r\n\r\n@if $search-start == null {\r\n  @return $subject;\r\n}\r\n\r\n$result: str-slice($subject, 0, $search-start - 1);\r\n$result: $result + $replace;\r\n$result: $result + str-slice($subject, $search-start + str-length($search));\r\n\r\n@return $result;\r\n}\r\n\r\n///\r\n/// Casts a number to a string\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {String}   $string  - Number to be parsed\r\n///\r\n/// @return {List | Null}\r\n///\r\n@function to-number($string) {\r\n// Matrices\r\n$strings: '0' '1' '2' '3' '4' '5' '6' '7' '8' '9';\r\n$numbers:  0   1   2   3   4   5   6   7   8   9;\r\n\r\n// Result\r\n$result: 0;\r\n$divider: 0;\r\n$minus: false;\r\n\r\n// Looping through all characters\r\n@for $i from 1 through str-length($string) {\r\n  $character: str-slice($string, $i, $i);\r\n  $index: index($strings, $character);\r\n  \r\n\r\n  @if $character == '-' {\r\n    $minus: true;\r\n  }\r\n  \r\n  @else if $character == '.' {\r\n    $divider: 1;\r\n  }\r\n  \r\n  @else {\r\n    @if type-of($index) != 'number' {\r\n      $result: if($minus, $result * -1, $result);\r\n      @return _length($result, str-slice($string, $i));\r\n    }\r\n\r\n    $number: nth($numbers, $index);\r\n    \r\n    @if $divider == 0 {\r\n      $result: $result * 10;\r\n    }\r\n    \r\n    @else {\r\n      // Move the decimal dot to the left\r\n      $divider: $divider * 10;\r\n      $number: $number / $divider;\r\n    }\r\n    \r\n    $result: $result + $number;\r\n  }\r\n}\r\n\r\n@return if($minus, $result * -1, $result);\r\n}\r\n\r\n@function _length($number, $unit) {\r\n$strings: 'px' 'cm' 'mm' '%' 'ch' 'pica' 'in' 'em' 'rem' 'pt' 'pc' 'ex' 'vw' 'vh' 'vmin' 'vmax';\r\n$units:   1px  1cm  1mm  1%  1ch  1pica  1in  1em  1rem  1pt  1pc  1ex  1vw  1vh  1vmin  1vmax;\r\n$index: index($strings, $unit);\r\n\r\n@if type-of($index) != 'number' {\r\n  @warn 'Unknown unit `#{$unit}`.';\r\n  @return false;\r\n}\r\n\r\n@return $number * nth($units, $index);\r\n}","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.SideContact {\r\n  height: calc(100vh - 180px);\r\n  flex-direction: column;\r\n  padding: 20px 10px;\r\n  overflow-y: auto;\r\n  display: flex;\r\n  flex: 1;\r\n}\r\n\r\n.title {\r\n  font-size: $fs-h2 + px;\r\n  padding: 20px 0;\r\n  color: $c-Cyan;\r\n}\r\n\r\n.contactBlock {\r\n  background-color: $c-white;\r\n  padding: 10px 2px 0px 2px;\r\n  position: relative;\r\n}\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.SideHead {\r\n  border-bottom: 1px solid $c-CharlestonGreen;\r\n  background-color: $c-Cultured;\r\n  flex-direction: column;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n}\r\n\r\n.personBlock {\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n}\r\n\r\n.personInfo {\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  display: flex;\r\n}\r\n\r\n.personImg {\r\n  @include flexCenter;\r\n  margin-right: 20px;\r\n  max-width: 50px;\r\n}\r\n\r\n.photo {\r\n  border-radius: 50%;\r\n}\r\n\r\n.search {\r\n  position: relative;\r\n  margin-right: 5px;\r\n  width: 100%;\r\n}\r\n\r\n.searchInput {\r\n  border: 1px solid $c-CharlestonGreen;\r\n  border-radius: 25px;\r\n  padding-left: 40px;\r\n  cursor: pointer;\r\n  outline: none;\r\n}\r\n\r\n.icon {\r\n  pointer-events: none;\r\n  @include flexCenter;\r\n  position: absolute;\r\n  font-size: 18px;\r\n  top: 18px;\r\n  left: 16px;\r\n}\r\n\r\n.exit {\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  @include flexCenter;\r\n  padding: 5px;\r\n  font-size: 26px;\r\n}\r\n\r\n.searchBlock {\r\n  display: flex;\r\n}\r\n\r\n.btn {\r\n  border: 1px solid $c-black;\r\n  background: transparent;\r\n  font-size: $fs-24 + px;\r\n  @include flexCenter;\r\n  border-radius: 25px;\r\n  padding: 5px;\r\n}\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.Sidebar {\r\n  border-right: 2px solid $c-CharlestonGreen;\r\n  transition: $t-normal;\r\n  width: 500px;\r\n  height: 100%;\r\n  @include media('<=desktop') {\r\n    width: 50px;\r\n  }\r\n}\r\n\r\n.showSideBar {\r\n  background-color: $c-white;\r\n  position: absolute;\r\n  width: 500px;\r\n  z-index: 2;\r\n  \r\n  @include media('<=tablet') {\r\n    width: 480px;\r\n  }\r\n  @include media('<=phone') {\r\n    width: 320px;\r\n  }\r\n}\r\n\r\n.sideBarContent {\r\n  @include media('<=desktop') {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.showSideBarContetn {\r\n  display: block;\r\n}\r\n\r\n.burger {\r\n  transition: $t-normal;\r\n  display: none;\r\n\r\n  @include media('<=desktop') {\r\n    @include flexCenter;\r\n    font-size: 34px;\r\n    margin: 20px auto 0 auto;\r\n  }\r\n}\r\n\r\n.closeBurger {\r\n  display: none;\r\n}\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.ChatContent {\r\n  // max-width: 700px;\r\n  // width: 100%;\r\n  padding: 0 10px;\r\n  // margin: 0 auto;\r\n  flex: 1 1 auto;\r\n  overflow-x: auto;\r\n}\r\n\r\n.wrapper {\r\n  max-width: 730px;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n}\r\n\r\n.message {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.content {\r\n  \r\n  flex-direction: column;\r\n  width: fit-content;\r\n  max-width: 460px;\r\n  display: flex;\r\n}\r\n\r\n.messageText {\r\n  background-color: $c-Cultured;\r\n  margin-bottom: 10px;\r\n  border-radius: 25px;\r\n  width: fit-content;\r\n  padding: 16px;\r\n}\r\n\r\n.personImg {\r\n  align-self: flex-start;\r\n  @include flexCenter;\r\n  margin-right: 20px;\r\n  max-width: 50px;\r\n  padding: 20px 0 ;\r\n  @include media('<=phone') {\r\n    margin-right: 5px;\r\n\r\n  }\r\n}\r\n\r\n.photo {\r\n  border-radius: 50%;\r\n}\r\n\r\n\r\n.date{\r\n\r\n  padding: 0 20px;\r\n}\r\n\r\n.answear{\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 20px;\r\n\r\n}\r\n\r\n.answearDate{\r\n  align-self: flex-end;\r\n}","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.ChatFooter {\r\n  background-color: $c-Cultured;\r\n  padding: 30px 20px;\r\n}\r\n\r\n.footerLabel {\r\n  position: relative;\r\n}\r\n\r\n.input{\r\n  border: 1px solid $c-CharlestonGreen;\r\n  padding-right: 50px;\r\n  border-radius: 25px;\r\n  outline: none;\r\n}\r\n\r\n\r\n.icon {\r\n  background-color: transparent;\r\n  border: 1px solid transparent;\r\n  font-size: $fs-24 + px;\r\n  @include flexCenter;\r\n  position: absolute;\r\n  padding: 5px;\r\n  right: 24px;\r\n  top: -5px;\r\n\r\n}\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.ChatHead {\r\n  background-color: $c-Cultured;\r\n  // margin-bottom: 20px;\r\n  align-items: center;\r\n  padding: 20px 10px;\r\n  display: flex;\r\n}\r\n\r\n.personImg {\r\n  @include flexCenter;\r\n  margin-right: 20px;\r\n  max-width: 50px;\r\n}\r\n\r\n.photo {\r\n  border-radius: 50%;\r\n}\r\n\r\n\r\n.name{\r\n  font-size: $fs-24 + px;\r\n}","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.Chat{\r\n  flex-direction: column;\r\n  display: flex;\r\n  flex-grow: 1;\r\n  height: 100%;\r\n\r\n}","@import '../styles/variables';\r\n@import '../styles/media';\r\n@import '../styles/mixins';\r\n\r\n.messanger {\r\n  display: flex;\r\n  height: 100vh;\r\n}","@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');\r\n\r\n// @font-face {\r\n//   font-family: 'Gilroy';\r\n//   src: url(../assets/fonts/Inter-Thin.ttf) format('truetype');\r\n//   font-weight: 100;\r\n//   font-style: normal;\r\n// }\r\n","* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n\r\n}\r\n\r\nbutton {\r\n  cursor: pointer;\r\n}\r\nul li{list-style: none;}\r\n\r\nh1,h2,h3,h4,h5,h6{font-size:inherit;font-weight: 400;}","body {\r\n  color: $c-black;\r\n  font-family: $f-OpenSans;\r\n  font-size: $fs-base + px;\r\n  transition: $t-normal;\r\n}\r\n\r\n.dark-mode {\r\n  background-color: $c-CharlestonGreen;\r\n}\r\n\r\n.icon {\r\n  display: inline-block;\r\n  width: 1em;\r\n  height: 1em;\r\n  stroke: currentColor;\r\n  fill: currentColor;\r\n  &:not(.has-stroke) {\r\n    stroke-width: 0;\r\n  }\r\n}\r\n\r\n// Selection\r\n*::selection {\r\n  background-color: rgba($c-Cyan, 0.3);\r\n}\r\n// Custom Scroll\r\n*::-webkit-scrollbar {\r\n  border-radius: 10px;\r\n  position: relative;\r\n  z-index: 999;\r\n  width: 6px;\r\n}\r\n*::-webkit-scrollbar-track {\r\n  box-shadow: inset 0 0 3px rgba($c-Cyan, 0.8);\r\n  background-color: rgba($c-Cyan, 0.3);\r\n  border-radius: 10px;\r\n}\r\n*::-webkit-scrollbar-thumb {\r\n  box-shadow: inset 0 0 3px rgba($c-Cyan, 0.8);\r\n  background-color: $c-Cyan;\r\n  border-radius: 10px;\r\n  outline: none;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\np{\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nul.navigatin__list {\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\ninput {\r\n  padding: 10px;\r\n  height: 55px;\r\n  width: 100%;\r\n  \r\n}\r\n\r\n\r\n\r\n.wrapper{\r\n  display: grid;\r\n  grid-template-columns: 1fr 3fr;\r\n}\r\n\r\n\r\n// ! Media example\r\n// @include media('<=tablet') {\r\n//   width: 300px;\r\n// }\r\n// ! Boostrap\r\n// @include media-breakpoint-down(sm) {\r\n//   width: 300px;\r\n// }\r\n","@import '../../styles/variables';\r\n@import '../../styles/media';\r\n@import '../../styles/mixins';\r\n\r\n.modal {\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  width: 100%;\r\n  z-index: 900;\r\n  display: flex;\r\n  height: 100%;\r\n  padding: 0 5px;\r\n  position: fixed;\r\n  align-items: center;\r\n  transition: $t-normal;\r\n  justify-content: center;\r\n  background-color: $c-CharlestonGreen;\r\n}\r\n\r\n.content {\r\n  justify-content: space-around;\r\n  flex-direction: column;\r\n  border-radius: 20px;\r\n  align-items: center;\r\n  text-align: center;\r\n  position: relative;\r\n  color: $c-white;\r\n  margin: 0 auto;\r\n  height: 300px;\r\n  padding: 20px;\r\n  display: flex;\r\n  width: 400px;\r\n}\r\n\r\n\r\n.ldsDualRing {\r\n  display: inline-block;\r\n  width: 80px;\r\n  height: 80px;\r\n}\r\n.ldsDualRing:after {\r\n  content: \" \";\r\n  display: block;\r\n  width: 64px;\r\n  height: 64px;\r\n  margin: 8px;\r\n  border-radius: 50%;\r\n  border: 6px solid #cef;\r\n  border-color: #cef transparent #cef transparent;\r\n  animation: lds-dual-ring 1.2s linear infinite;\r\n}\r\n@keyframes lds-dual-ring {\r\n  0% {\r\n    transform: rotate(0deg);\r\n  }\r\n  100% {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":""}